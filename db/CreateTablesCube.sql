/*
	Table [Entity] will replace the following tables from the older Database Model:
		- my_Company
		- my_S+tar
*/
CREATE TABLE [Entity]
(

)


/*
	Table [EntertainmentType] works as a Enumrable:
		1 -	Game	
		2 -	Movie	
		3 -	Book	
		4 -	Series	
		5 -	Season	
		6 -	Episode
*/
IF OBJECT('[dbo].[EntertainmentType]', 'U') IS NOT NULL
	BEGIN
		DROP TABLE [dbo].[EntertainmentType];
	END
ELSE
	BEGIN
		CREATE TABLE [dbo].[EntertainmentType]
		(
			Id 		INT				NOT NULL,
			Abrev	NVARCHAR(40)	NOT NULL
			CONSTRAINT PK_EntertainmentType PRIMARY KEY (Id)
		)

		INSERT INTO 
			[EntertainmentType]
			(
				Id,
				Abrev
			)
		VALUES
			(1
			,'Game'),
			(2
			,'Movie'),
			(3
			,'Book'),
			(4
			,'Series'),
			(5
			,'Season'),
			(6
			,'Episode')
	END
/*
	<Title>
		[dbo].[Entertainment]
	</Title>
	<Description>
		Replaces the tables my_Game, my_Book, my_Movie, my_Series, my_Season and my_Episode from the old database model
	</Description>
*/

IF OBJECT ('[dbo].[Entertainment]', 'U') IS NOT NULL
	BEGIN
		DROP TABLE [dbo].[Entertainment];
	END
ELSE
	BEGIN
		CREATE TABLE [dbo].[Entertainment]
		(
			[Id]						INT				NOT NULL	IDENTITY,	-- Old Model (All) --GENERATED BY DEFAULT AS IDENTITY
			[Title]						NVARCHAR(255)	NOT NULL,				-- Old Model (All)
			[ReleaseDate]				DATE			NOT NULL,				-- Old Model (All)
			[Synopsis]					TEXT			NOT NULL,				-- Old Model (All)
			[Duration] 					INT				NULL,					-- Old Model (my_Movie)
			----------------+
			--FOREIGN KEYs	|
			----------------+
			[EntertainmentTypeId]		INT				NOT NULL,				-- Used to know which type of entertainment the entry belongs to
			[EntertainmentParentId]		INT				NULL,					-- Old Model (my_Season.seriesId, my_Episode.seasonId)
			[EngineId]					INT				NULL,					-- Old Model (my_Game)
			[ParentAdvisoryId]			INT				NULL,					-- Old Model (my_Game, my_Movie, my_Series)
			[PublisherId]				INT				NULL,					-- Old Model (my_Game.publicadorId)
			[PublishingCompanyId]		INT				NULL,					-- Old Model (my_Book)
			[SagaId]					INT				NULL,					-- Old Model (All)
			CONSTRAINT PK_Entertainment PRIMARY KEY (Id)
		)

		IF OBJECT('[dbo].[Entertainment]', 'U') IS NOT NULL
			BEGIN
				--ADD CONSTRAINTS
				ALTER TABLE Entertainment ADD CONSTRAINT FK_EntertainmentTypeId		FOREIGN KEY (EntertainmentTypeId)		REFERENCES EntertainmentType(Id);
				ALTER TABLE Entertainment ADD CONSTRAINT FK_EngineId				FOREIGN KEY (EngineId)					REFERENCES Engine(Id);
				ALTER TABLE Entertainment ADD CONSTRAINT FK_ParentAdvisoryId		FOREIGN KEY (ParentAdvisoryId)			REFERENCES ParentAdvisory(Id);
				ALTER TABLE Entertainment ADD CONSTRAINT FK_PublisherId				FOREIGN KEY (PublisherId)				REFERENCES Company(Id);
				ALTER TABLE Entertainment ADD CONSTRAINT FK_PublishingCompanyId		FOREIGN KEY (PublishingCompanyId)		REFERENCES PublishingCompany(Id);
				ALTER TABLE Entertainment ADD CONSTRAINT FK_SagaId					FOREIGN KEY (SagaId)					REFERENCES Saga(Id);
				--PRINT MESSAGES
				PRINT '    Created - FK_EngineId';
				PRINT '    Created - FK_ParentAdvisoryId';
				PRINT '    Created - FK_PublisherId';
				PRINT '    Created - FK_PublishingCompanyId';
				PRINT '    Created - FK_SagaId';
			END
		ELSE
			BEGIN
				--PRINT MESSAGES
				PRINT 'Not Created - FK_EngineId';
				PRINT 'Not Created - FK_ParentAdvisoryId';
				PRINT 'Not Created - FK_PublisherId';
				PRINT 'Not Created - FK_PublishingCompanyId';
				PRINT 'Not Created - FK_SagaId';
			END
	END
